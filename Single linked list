#include<stdio.h>
#include<stdlib.h>
struct block
  {
     int data;
     struct block *adrs;
  };    
struct block *new,*i,*temp;
struct block *head=NULL;  
void create()
   {
     new=(struct block*)malloc(sizeof(struct block));
     printf("Enter the value to be inserted:");        						                    //creating a new node
     scanf("%d",&new->data);
     new->adrs=NULL;
   }          
void insbeg()
  {
     create();
     if(head==NULL)
       {
          head=new;                                  						                      //insertion at the beginning
       }
     else 
       {
          new->adrs=head;
          head=new;
       }
   }   
void insend()
   {
      create();
      if(head==NULL)
         {
            head=new;
         }
      else											                                                      //insertion at the end
         {
            i=head;
            while(i->adrs!=NULL)
               {
                  i=i->adrs;
               }
            i->adrs=new;
         }
    }      
void inspos()
  {    
    int pos,j;    
    if (head==NULL)
       {   
          create();
          head=new;       
          printf("\nList was empty.Inserted in the first position.\n");            
       }
    else 
      {
    	printf("\nEnter the value of position:");
   	scanf("%d",&pos);
   	if(pos==0)
      	 {
       	  insbeg();
         }
    	else
       	 {
          	create();								                                              	//insertion at a position
          	i=head;
          	for(j=1;j<pos-1;j++)
             		{
                		i=i->adrs;  
                		if(i->adrs==NULL)
              		          {
                  		     printf("\nThe position value is invalid.");                   		     
                  		     break;                                    
              		          }  
             		} 
             	if(i->adrs!=NULL)
             	  {	             		            	          	
              	     new->adrs=i->adrs;
                     i->adrs=new;  
                  }                                                                             		       	  
          }   
      }    
 }
void delbeg()
  {
     if(head==NULL)
        {
            printf("The list is empty.");
        }
     else if(head->adrs==NULL)
        {
            temp=head;
            head=NULL;
            printf("Removed %d",temp->data);							                            //deletion from the beginning
            free(temp);
        }
     else
        {
            temp=head;
            head=temp->adrs;
            printf("Removed %d",temp->data);
            free(temp);
        }  
   } 
void delend()
   {
       if(head==NULL)
         {
            printf("The list is empty.");
         }     
       else if(head->adrs==NULL)
         {
            temp=head;
            head=NULL;
            printf("Removed %d",temp->data);
            free(temp);
         }
       else											                                                        //deletion from the end
          {  
              temp=head;
              while(temp->adrs!=NULL)
                 {
                    i=temp;
                    temp=temp->adrs;
                 }
              i->adrs=NULL;
              printf("Removed %d",temp->data);
              free(temp);            
          }
    } 
void delpos()
   { 
       int pos,j;
       if(head==NULL)
         {
            printf("The list is empty.");
         } 
       else 
         {
            printf("Enter the position:");
            scanf("%d",&pos);
            if(pos==0)
               {
                  delbeg();									                                              //Deletion from a position
               }
            else
               {
                  temp=head;
                  for(j=0;j<pos;j++)
                     {
                        i=temp;
                        temp=temp->adrs;
                        if(temp==NULL)
                           {
                               printf("The position value is invalid.");
                               break;
                           }
                      }     
                   if(temp!=NULL)
                     {
                        i->adrs=temp->adrs;
                        printf("Removed %d",temp->data);
                        free(temp);
                     }  
                }
         }
   }                                
                                                                                                                          
void display()
   {     
      printf("The elements in linked list is\n");
      i=head;
      while(i!=NULL)										                                                    //Displaying the list
          {
             printf("%d\n",i->data);
             i=i->adrs;
          }
   }
int main()
   {
      int n;
     while(1)
       {
          printf("\n1.Insert Beginning\n2.Insert End\n3.Insert Position\n4.Delete Beginning\n5.Delete End\n6.Delete Position\n7.Display\n8.Exit");
          printf("\nEnter your choice:");
          scanf("%d",&n);
          switch(n)
            {
              case 1:
                 insbeg();
                 break;
              case 2:
                 insend();
                 break;
              case 3:
                 inspos();                
                 break;
              case 4:
                 delbeg();
                 break; 
              case 5:
                 delend();
                 break;  
              case 6:
                 delpos();
                 break;
              case 7:
                 display();
                 break;
              case 8:
                 exit(1);
                 break;
              default:
                 printf("Wrong entry");  
           }            
        }
   }       
